@using Microsoft.AspNetCore.Components.Web
@namespace Aggregator.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link id="theme" rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="Aggregator.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        fetch('https://bootswatch.com/api/5.json')
            .then(response => response.json())
            .then(data => load(data));


        function load(data) {
            const themes = data.themes;
            const select = document.querySelector('select#themes');

            themes.forEach((value, index) => {
                debugger;
                const option = document.createElement('option');
                option.value = index;
                option.textContent = value.name;

                select.append(option);
            });

            select.addEventListener('change', (e) => {
                const theme = themes[e.target.value];
                document.querySelector('#theme').setAttribute('href', theme.css);
            });

            const changeEvent = new Event('change');
            select.dispatchEvent(changeEvent);
        }
    </script>
</body>
</html>
